{"version":3,"sources":["hooks/http.hook.js","actions/index.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","reducers/heroes.js","reducers/filters.js","store/index.js","index.js"],"names":["useHttp","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","heroesFetching","createAction","heroesFetched","heroAdded","heroDelete","heroesFetchingError","HeroesListItem","elementClassName","name","description","element","id","dispatch","useDispatch","className","src","alt","style","type","aria-label","onClick","then","result","Spinner","role","HeroesList","props","useSelector","state","heroes","heroesLoadingStatus","filter","filters","useEffect","catch","fetchHeroes","arr","filterHeroes","item","elements","length","map","ElemUsed","items","value","data-id","title","createUiid","HeroesAddForm","useState","setFilters","useForm","register","handleSubmit","reset","e","console","log","onSubmit","JSON","stringify","htmlFor","required","placeholder","HeroesFilters","class","payload","filterUpdate","App","createReducer","builder","addCase","action","push","addDefaultCase","initialState","stringMiddleware","next","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c1fc447.chunk.js","sourcesContent":["import { useCallback } from \"react\";\n\nexport const useHttp = () => {\n    // const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        // setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n            \n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            // setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    // const clearError = useCallback(() => {\n        // setProcess('loading');\n    // }, []);\n\n    return {request, \n            // clearError, \n            // process, \n            // setProcess\n        }\n}","import {createAction} from \"@reduxjs/toolkit\"\n\nexport const fetchHeroes=(request)=>(dispatch)=>{\n    dispatch(heroesFetching());\n    request(\"http://localhost:3001/heroes\")\n        .then(data => {\n            dispatch(heroesFetched(data))                \n        })\n        .catch(() => dispatch(heroesFetchingError()))\n}\n\nexport const heroesFetching = createAction('HEROES_FETCHING')\n// () => {\n//     return {\n//         type: 'HEROES_FETCHING'\n//     }\n// }\n\nexport const heroesFetched = createAction('HEROES_FETCHED')\n// (heroes) => {\n//     return {\n//         type: 'HEROES_FETCHED',\n//         payload: heroes\n//     }\n// }\n\nexport const heroAdded = createAction('HERO_ADDED')\n// (hero) => {\n//     return {\n//         type: 'HERO_ADDED',\n//         payload: hero\n//     }\n// }\nexport const heroDelete = createAction('HERO_DELETE')\n// (id) => {\n//     return {\n//         type: 'HERO_DELETE',\n//         payload: id\n//     }\n// }\n\nexport const heroesFetchingError = createAction('HEROES_FETCHING_ERROR')\n// () => {\n//     return {\n//         type: 'HEROES_FETCHING_ERROR'\n//     }\n// }\n\nexport const filterUpdate = (filter) => {\n    return {\n        type: 'FILTER_UPDATE',\n        payload: filter\n    }\n}\nexport const filterClear = () => {\n    return {\n        type: 'FILTER_CLEAR',\n    }\n}","import { useDispatch } from \"react-redux\";\nimport { heroDelete, heroesFetching } from \"../../actions\";\nimport { useHttp } from \"../../hooks/http.hook\";\n\n\nconst HeroesListItem = ({name, description, element, id}) => {\n    const dispatch=useDispatch();\n    const {request}=useHttp();\n    let elementClassName;\n\n    switch (+element) {\n        case 2:\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 3:\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 4:\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 5:\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n    const deleteHero=()=>{\n        const method=\"DELETE\";\n        dispatch(heroesFetching());\n        request(`http://localhost:3001/heroes/${id}`,method)\n        .then(result=>{\n            dispatch(heroDelete(id));\n        })\n    }\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white  ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body \">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\" onClick={deleteHero}></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchHeroes } from '../../actions';\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\n\n\nconst HeroesList = (props) => {\n    const {heroes, heroesLoadingStatus} = useSelector(state => state.heroes);\n    const {filter}=useSelector(state=>state.filters);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchHeroes(request));\n\n        // eslint-disable-next-line\n    }, []);\n\n\n    if (heroesLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (heroesLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n        }\n        const newArr=filterHeroes(arr);\n        return newArr.map(({id, ...props}) => {\n            \n            return <HeroesListItem key={id} {...props } id={id}/>\n        })\n    }\n    const filterHeroes=(heroes)=>{\n        if (filter===1) return heroes;\n        return heroes.filter(item=> +item.element===filter)\n    }\n\n    const elements = renderHeroesList(heroes);\n    return (\n        <ul >\n            {elements}\n        </ul>\n    )\n}\n\nexport default HeroesList;","\nimport { v4 as createUiid } from \"uuid\";\n// Задача для этого компонента:\n// Реализовать создание нового героя с введенными данными. Он должен попадать\n// в общее состояние и отображаться в списке + фильтроваться\n// Уникальный идентификатор персонажа можно сгенерировать через uiid\n// Усложненная задача:\n// Персонаж создается и в файле json при помощи метода POST\n// Дополнительно:\n// Элементы <option></option> желательно сформировать на базе\n// данных из фильтров\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useHttp } from \"../../hooks/http.hook\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { heroesFetching, heroAdded } from \"../../actions\";\n\nconst HeroesAddForm = () => {\n    const [filters, setFilters]=useState([]);\n    const {request}=useHttp();\n    const {register, handleSubmit,reset}=useForm();\n    const dispatch=useDispatch();\n\n    //console.log(heroesList);\n    useEffect(()=>{\n        request(\"http://localhost:3001/filters\")\n            .then(data => {\n                setFilters(data);\n            })\n            .catch((e) => console.log('error: ', e))\n\n        // eslint-disable-next-line\n    },[])\n    const onSubmit=(data)=>{\n        data.id=createUiid();\n        console.log(data);\n        const body=JSON.stringify(data),\n              method='POST';\n        dispatch(heroesFetching());\n        request(\"http://localhost:3001/heroes/\",\n            method,\n            body\n        )\n        .then(result=>{\n            dispatch(heroAdded(result))\n            reset();\n        })\n        .catch(e=>console.log(e));\n    }\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input \n                    required\n                    type=\"text\" \n                    {...register(\"name\")}\n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"Как меня зовут?\"/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    required\n                    {...register(\"description\") }\n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"Что я умею?\"\n                    style={{\"height\": '130px'}}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    {...register(\"element\")}>\n                    {/* <option key={\"choose_fil\"}>Я владею элементом...</option> */}\n                    {ElemUsed(filters)}\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\nconst ElemUsed=(items)=>{\n    const elements=items.map(item=>{\n        return <option key={createUiid()} value={item.id} data-id={item.name}>{item.title}</option>  \n    })\n    return elements;\n}\n\nexport default HeroesAddForm;\n","\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n// Изменять json-файл для удобства МОЖНО!\n// Представьте, что вы попросили бэкенд-разработчика об этом\n\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useHttp } from \"../../hooks/http.hook\";\nimport { filterUpdate } from \"../../actions\";\nimport { useDispatch, useSelector} from \"react-redux\";\n\n\nconst HeroesFilters = () => {\n    const [filters, setFilters]=useState([]);\n    const {filter}=useSelector(state=>state.filters);\n    const {request}=useHttp();\n    const dispatch=useDispatch();\n    useEffect(()=>{ \n        request(\"http://localhost:3001/filters\")\n        .then(data=>{setFilters(data)});\n        // eslint-disable-next-line\n    },[])  \n    const setFilter=(id)=>{\n        dispatch(filterUpdate(id));\n    }\n    const renderFilters=()=>{\n        if (!filters){ return null}\n        const elements=filters.map(item=>{\n            \n            return <button \n                        key={`filter_${item.id}`} \n                        className={`${item.class} ${filter===item.id?\" active\":\"\"}`}\n                        onClick={()=>setFilter(item.id)}>{item.title}</button>\n        })\n        return elements;\n    }  \n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {renderFilters()}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;\n","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import { createReducer } from \"@reduxjs/toolkit\"\r\nimport {\r\n    heroesFetching,\r\n    heroesFetched,\r\n    heroesFetchingError,\r\n    heroAdded,\r\n    heroDelete\r\n} from '../actions'\r\n\r\nconst initialState = {\r\n    heroes: [],\r\n    heroesLoadingStatus: 'idle'\r\n}\r\nconst heroes=createReducer(initialState, builder=>{\r\n    builder\r\n        .addCase(heroesFetching, state=>{\r\n            state.heroesLoadingStatus='loading';\r\n        })\r\n        .addCase(heroesFetched, (state,action)=>{\r\n            state.heroesLoadingStatus='idle';\r\n            state.heroes=action.payload;\r\n        })\r\n        .addCase(heroesFetchingError, state=>{\r\n            state.heroesLoadingStatus='error';\r\n        })\r\n        .addCase(heroAdded, (state, action)=>{\r\n            state.heroesLoadingStatus='idle';\r\n            state.heroes.push(action.payload);\r\n        })\r\n        .addCase(heroDelete, (state,action)=>{\r\n            state.heroes=state.heroes.filter(item=>item.id!==action.payload);\r\n            state.heroesLoadingStatus='idle';\r\n        })\r\n        .addDefaultCase(()=>{})\r\n})\r\n\r\n\r\nexport default heroes;","const initialState = {\r\n    filters: [],\r\n    filter:1\r\n}\r\nconst filters = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FILTER_CLEAR':  \r\n            return{\r\n                ...state,\r\n                filter:initialState.filter\r\n            }\r\n        case 'FILTER_UPDATE':  \r\n            return{\r\n                ...state,\r\n                filter:action.payload\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default filters;","import { configureStore } from '@reduxjs/toolkit';\nimport heroes from '../reducers/heroes';\nimport filters from '../reducers/filters';\n\nconst stringMiddleware=()=>(next)=>(action)=>{\n        if (typeof action==='string'){\n                return next({\n                        type: action\n                })\n        }\n        return next(action);\n}\n\nconst store=configureStore({\n        reducer:{heroes,filters},\n        middleware:getDefaultMiddleware=>getDefaultMiddleware().concat(stringMiddleware),\n        devTools:process.env.NODE_ENV!=='production'\n})\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}